<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>fr.insideapp.sonarqube</groupId>
    <artifactId>sonar-flutter</artifactId>
    <version>0.5.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Flutter SonarQube Plugin</name>
    <description>Enables analysis of Dart and Flutter projects into SonarQube.</description>
    <url>https://github.com/insideapp-oss/sonar-flutter</url>

    <modules>
        <module>sonar-flutter-plugin</module>
        <module>dart-lang</module>
    </modules>

    <inceptionYear>2020</inceptionYear>
    <organization>
        <name>inside|app</name>
        <url>https://github.com/insideapp-oss</url>
    </organization>
    <licenses>
        <license>
            <name>GNU LGPL 3</name>
            <url>https://www.gnu.org/licenses/lgpl-3.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>zippy1978</id>
            <name>Gilles Grousset</name>
            <organization>inside|app</organization>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:insideapp-oss/sonar-flutter.git</connection>
        <developerConnection>scm:git:git@github.com:insideapp-oss/sonar-flutter.git</developerConnection>
        <url>https://github.com/insideapp-oss/sonar-flutter</url>
      <tag>HEAD</tag>
    </scm>

    <properties>
        <license.owner>inside|app</license.owner>
        <license.title>SonarQube Flutter Plugin</license.title>
        <license.mailto>contact@insideapp.fr</license.mailto>

        <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>
        <jdk.min.version>1.9</jdk.min.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <sonar.version>7.9</sonar.version>

        <assertj.version>3.5.2</assertj.version>
        <junit.version>4.13.1</junit.version>
        <mockito.version>4.4.0</mockito.version>
        <sslr.version>1.23</sslr.version>
        <sslr-squid-bridge.version>2.7.1.392</sslr-squid-bridge.version>
        <ant.version>1.6</ant.version>
        <assertj.version>3.5.2</assertj.version>
        <jproc.version>2.2.3</jproc.version>
        <apache-commons.version>2.12.0</apache-commons.version>
        <apache-commons-lang3.version>3.12.0</apache-commons-lang3.version>

        <sonar.sources>src/main/java,src/main/js</sonar.sources>
        <sonar.exclusions>file:**/src/main/java/**/generated/**/*.java</sonar.exclusions>

        <!-- Max number of rules to process manually when running rule update scripts -->
        <scripts.max-manual>20</scripts.max-manual>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.sonarsource.sonarqube</groupId>
            <artifactId>sonar-plugin-api</artifactId>
            <version>${sonar.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${apache-commons.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache-commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.buildobjects</groupId>
            <artifactId>jproc</artifactId>
            <version>${jproc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.sslr</groupId>
            <artifactId>sslr-core</artifactId>
            <version>${sslr.version}</version>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.sslr-squid-bridge</groupId>
            <artifactId>sslr-squid-bridge</artifactId>
            <version>${sslr-squid-bridge.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.sonar.sslr</groupId>
                    <artifactId>sslr-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.sonar.sslr</groupId>
                    <artifactId>sslr-xpath</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.sonar</groupId>
                    <artifactId>sonar-plugin-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.picocontainer</groupId>
                    <artifactId>picocontainer</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.sonarsource.sonarqube</groupId>
            <artifactId>sonar-testing-harness</artifactId>
            <version>${sonar.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.sslr</groupId>
            <artifactId>sslr-testing-harness</artifactId>
            <version>${sslr.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${jdk.min.version}</source>
                    <target>${jdk.min.version}</target>
                    <compilerArgs>
                        <arg>-Xlint</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <configuration>
                    <excludes>
                        <exclude>**/generated/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- Attached to Maven test phase -->
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>4.1</version>
                <configuration>
                    <licenseSets>
                        <licenseSet>
                            <header>com/mycila/maven/plugin/license/templates/LGPL-3.txt</header>
                            <includes>
                                <include>**/*.java</include>
                                <include>**/*.groovy</include>
                            </includes>
                        </licenseSet>
                    </licenseSets>
                    <properties>
                        <owner>${license.owner}</owner>
                        <email>${license.mailto}</email>
                        <project.name>SonarQube Flutter Plugin</project.name>
                    </properties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <version>3.0.10</version>
                        <type>pom</type>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ivy</groupId>
                        <artifactId>ivy</artifactId>
                        <version>2.5.0</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

</project>